{"version":3,"sources":["assests/Vectorburger.svg","controller/url.js","controller/auth.js","Views/Login/Login.jsx","Components/Column.jsx","Components/Table.jsx","Components/Pagination.jsx","Components/searchBar.jsx","controller/crud.js","Views/Users/Users.jsx","Views/Products/Products.jsx","Components/Cards/Product.jsx","Views/Orders/Products/Products.jsx","Components/Cards/Order.jsx","Components/Cards/OrderReady.jsx","Views/Orders/Orders.jsx","Components/NavBar.jsx","Views/Home/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","url","getToken","email","password","a","requestOptions","method","headers","body","JSON","stringify","fetch","data","status","json","dataJson","Error","statusText","Login","history","useHistory","useState","setEmail","setPassword","loginSubmit","event","preventDefault","token","localStorage","setItem","push","document","getElementById","textContent","className","id","src","Vectorburger","alt","onSubmit","type","name","placeholder","value","onChange","e","target","Column","prop","putData","deleteBy","Object","values","map","key","Fragment","image","header","icon","faTrash","onClick","faEdit","Table","props","table","arrayData","head","element","i","_id","Pagination","page","currentPage","pages","Array","from","total","keys","num","parseInt","SearchBar","display","setDisplay","search","setSearch","wrapperRef","useRef","searchUserBy","useEffect","addEventListener","clickOutside","console","log","removeEventListener","wrap","current","contains","list","forEach","ref","showlist","filter","item","indexOf","user","tabIndex","getAllData","Authorization","getItem","getData","getByKeyword","keyword","postbyKeyword","deletebyKeyword","updateByKeyword","Users","users","setUsers","dataToPut","setDataToPut","allData","setAllData","setPage","query","setQuery","userData","roles","admin","allUsers","Math","ceil","length","message","prevPage","button","newEmail","newRol","newPassword","userAdded","msg","getElementsByTagName","setTimeout","input","querySelector","find","userSubmit","minLength","thisPage","Products","products","setProducts","showDate","setShowDate","allProducts","newName","newPrice","newType","price","productAdded","validateInput","productsSubmit","for","min","max","product","Product","Order","OrderReady","Orders","withRouter","path","to","removeItem","exact","Home","useRouteMatch","App","isLogin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.65754a69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Vectorburger.5d41c110.svg\";","const url = 'http://134.122.82.187:8000';\n//const url = 'http://142.93.138.137:8080';\n\n\nexport {\n  url,\n};","import { url } from './url';\n\nconst getToken = async (email, password) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n  };\n  const data = await fetch(`${url}/auth`, requestOptions)\n  switch (data.status) {\n          case 200:\n            const dataJson = await data.json();\n            return dataJson;\n          case 400:\n            throw new Error('Insert email and password');\n          case 404:\n            throw new Error('Invalid user or password');\n          default:\n            throw new Error(data.statusText);\n        }\n\n};\nexport { getToken };\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\n//import { withRouter } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport './Login.scss';\nimport { getToken } from '../../controller/auth';\nimport Vectorburger from '../../assests/Vectorburger.svg'\n\nconst Login = () => {\n  let history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const loginSubmit = async (event) => {\n     event.preventDefault();\n      try{\n        const { token } = await getToken(email, password);\n        localStorage.setItem('token', token);\n        history.push('/home');\n      } catch(error){\n        document.getElementById('error').textContent = error;\n      }\n  };\n  return (\n    <div className=\"login\">\n      <h1>\n        Burger Queen\n      </h1>\n      <div id=\"login-form\" className=\"body\">\n        {/* src/assests/Vectorburger.svg */}\n        <img src={Vectorburger} alt=\"\"/>\n        {/* enviamos informacion de todo el form */}\n        <form onSubmit={(event) => loginSubmit(event)}>\n          <input type=\"text\" name=\"email\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n          <input type=\"password\" name=\"password\" placeholder=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n          <p id=\"error\" />\n          <button type=\"submit\" value=\"Login\">Login</button>\n          {/* <input class=\"sub\" type=\"submit\" value=\"Login\" /> */}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst Column = (prop) => {\n  // const token = localStorage.getItem('token');\n  const { data , putData, deleteBy, type} = prop;\n  // delete products.image;\n  const headers =  Object.values(data);\n\n  return (\n    <tr>\n      {type === 'users' ? headers.map((data) => \n      <td key={data}>{data}</td>) \n      :(\n        <React.Fragment>\n          <td><img src={data.image} alt=''/></td>\n        {headers.map((header) =>\n        <td key={header}>{header}</td>)}\n        </React.Fragment>)}\n      <td>\n        <FontAwesomeIcon icon={faTrash} onClick={() => { deleteBy(data) }}/>\n        <FontAwesomeIcon icon={faEdit} onClick={() => putData(data) }/>\n      </td>\n    </tr>\n  );\n};\n\nexport default Column;\n","import React from 'react';\nimport './Components.scss';\nimport Column from './Column';\n\nconst Table = (props) => {\n  const { table , arrayData, putData, deleteBy} = props;\n  //if(page.totalPages){\n  //   return (\n  //     <table className=\"tableComponent\">\n  //       <thead>\n  //         <tr>\n  //           {head.map((headInfo, i) => <th key={i} >{headInfo}</th>)}\n  //         </tr>\n  //       </thead>\n  //       <tbody>\n  //         ERROR\n  //       </tbody>\n  //     </table>\n  //   );\n  // }\n  return (\n    <table className=\"tableComponent\">\n      <thead>\n        <tr>\n          {(table.head).map((element, i) => <th key={i} >{element}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {arrayData.map((data) => <Column type={table.type}key={data._id} data={data} putData={putData} deleteBy={deleteBy}/>)}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport './Components.scss';\n\nexport default function Pagination(props) {\n  const { page, currentPage } = props;\n  const pages = Array.from(Array(page.total).keys());\n  return (\n    <div className=\"paginationComponent\">\n      <ul className=\"pagination\">\n        {/* <li><a onClick={prev}>«</a></li> */}\n        {pages.map((num) => <li key={num} onClick={() => currentPage(parseInt(num)+1)}>{parseInt(num)+1}</li> )}\n        {/* <li><a onClick={next}>»</a></li> */}\n      </ul>\n    </div>\n  );\n}\n","\nimport React, { useState, useEffect, useRef } from 'react';\nimport './searchBar.scss'\nimport '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst SearchBar = (props) => {\n    const [display, setDisplay] = useState(false);\n    const [search, setSearch] = useState('');\n    const wrapperRef = useRef(null); // devuelve un objeto ref mutable cuya propiedad (.current) se inicializa con el argumento pasado\n    const { arrayData, searchUserBy, table } = props;\n\n    useEffect(()=>{\n\n        document.addEventListener('mousedown', clickOutside);\n    console.log('user efects search box');\n        return () => {\n            document.removeEventListener('mousedown', clickOutside);\n        }\n    },[]);\n\n    const showlist = (e) => {\n        setDisplay(!display)\n        setSearch(e.target.value)\n    };\n\n    const clickOutside = (e) =>{\n        const {current: wrap} = wrapperRef;\n        if (wrap && !wrap.contains(e.target)) {\n            setDisplay(false)\n        }\n\n    };\n    const list = []\n    arrayData.forEach(element => {\n        switch (table) {\n            case 'users':\n                list.push(element.email);\n                list.push(element._id); \n                return list;\n            case 'products':\n                list.push(element._id);\n                list.push(element.name); \n                return list;\n            case 'orders':\n                list.push(element._id);\n                list.push(element.name); \n                return list;\n            default:\n                list.push(element._id);\n                return list;\n        }\n    });\n    const userSelected = (value) => {\n\n        setSearch(value);\n        setDisplay(false);\n    }\n\n    return (\n        <div className='wrapper' ref={wrapperRef}>\n            <div className='search-box'>\n            <input \n                placeholder={'Search employee'} \n                // onClick={(e) => setDisplay(!display)}\n                value={search}\n                // onChange={(e) => setSearch(e.target.value)}\n                onChange={(e) => showlist(e)}\n            />\n            <button \n                type=\"submit\" \n                className=\"searchButton\" \n                onClick={(e) => searchUserBy(e)}>\n                <SearchIcon />\n            </button>\n\n            </div>\n            { display &&  (<ul className='suggestions'>\n                {\n                    list\n                    .filter((item) => item.indexOf(search) > -1)\n                    .map((user, i) => <li key={i} onClick={() => userSelected(user)} tabIndex='0'> {user}</li>)\n                }\n            </ul>)}\n            \n        </div>\n);\n}\n\nexport default SearchBar","import { url } from './url';\n\nconst getAllData = async (table) => {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n  };\n  const data = await fetch(`${url}/${table}`, requestOptions);\n  const dataJson = await data.json();\n  return dataJson;\n}\n\nconst getData = async (page, table) => {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n  };\n  const data = await fetch(`${url}/${table}?page=${page}&limit=5`, requestOptions);\n  switch (data.status) {\n    case 200:\n      const dataJson = await data.json();\n    return dataJson;\n    case 404:\n     throw new Error('No page found');\n     default:\n      throw new Error(data.statusText);\n  }\n  \n};\n\nconst getByKeyword = async (keyword, table) => {\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n  };\n  const data = await fetch(`${url}/${table}/${keyword}`, requestOptions);\n  // const dataJson = await data.json();\n  // return dataJson;\n  switch (data.status) {\n    case 200:\n      const dataJson = await data.json();\n      return dataJson;\n    case 403:\n      console.log('error ')\n      break;\n    default:\n      return new Error(data.statusText);\n  }\n};\n\nconst postbyKeyword = async (body, table) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n    body: JSON.stringify(body),\n  };\n const data = await fetch(`${url}/${table}`, requestOptions);\n//  const dataJson = await data.json();\n//  return dataJson\nswitch (data.status) {\n  case 200:\n    const dataJson = await data.json();\n    return dataJson;\n  case 403:\n    console.log('error ')\n    break;\n  default:\n    return new Error(data.statusText);\n}\n};\n\nconst deletebyKeyword = async (keyword, table) => {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n  };\n const data = await fetch(`${url}/${table}/${keyword}`, requestOptions);\n//  const dataJson = await data.json();\n//  return dataJson\nswitch (data.status) {\n  case 200:\n    const dataJson = await data.json();\n    return dataJson;\n  case 403:\n    console.log('error ')\n    break;\n  default:\n    return new Error(data.statusText);\n}\n};\n\n\nconst updateByKeyword = async (keyword , body, table) => {\n  const requestOptions = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n    body: JSON.stringify(body),\n  };\n  const data = await fetch(`${url}/${table}/${keyword}`, requestOptions);\n  switch (data.status) {\n    case 200:\n      const dataJson = await data.json();\n      return dataJson;\n    case 403:\n      console.log('error ')\n      break;\n    default:\n      return new Error(data.statusText);\n  }\n};\n\n\nexport {\n  getAllData,\n  getData,\n  getByKeyword,\n  postbyKeyword,\n  deletebyKeyword,\n  updateByKeyword,\n};\n","import React, { useState, useEffect } from 'react';\nimport './Users.scss';\nimport Table from '../../Components/Table';\nimport Pagination from '../../Components/Pagination';\nimport SearchBar from '../../Components/searchBar';\nimport { \n  getAllData,\n  getData,\n  getByKeyword,\n  postbyKeyword,\n  deletebyKeyword,\n  updateByKeyword,\n } from '../../controller/crud';\n\nconst Users = () => {\n\n  const table= {head:['id', 'Email', 'Rol'], type: 'users'};\n  const initPage = { current: 1 , total: 1};\n  //-------------------------STATE------------------------------//\n  const [users, setUsers] = useState([]);\n  const [dataToPut, setDataToPut] = useState({});\n  const [allData, setAllData] = useState([]);\n  const [page, setPage] = useState(initPage);\n  const [display, setDisplay] = useState({});\n  const [query, setQuery] = useState(false);\n//-------------------------GET USER------------------------------//\n    useEffect(() => {\n      // async function fetchUser(){\n      //   const userData = await getUsers(page);\n      //   setUsers(userData)\n      // }\n      //   fetchUser();\n      console.log('use effect');\n      (async ()=> {\n        try{\n            console.log('ok',page.current);\n            console.log('use efect');\n            const dataJson = await getData(page.current,'users');\n            const userData = dataJson.map((data) => {\n              data.roles = (data.roles.admin) ? 'admin' : 'service';\n              return data;\n            });\n            setUsers(userData);\n          const allUsers = await getAllData('users');\n          setAllData(allUsers);\n          setPage(page => ({ ...page, total: Math.ceil((allUsers.length)/5) }));\n          ////-------\n        }catch(e){\n          if(e.message==='No page found'){\n            const prevPage = page.current-1;\n            const dataJson = await getData(prevPage,'users');\n            const userData = dataJson.map((data) => {\n              data.roles = (data.roles.admin) ? 'admin' : 'service';\n              return data;\n            });\n            setUsers(userData);\n            setPage({ current: prevPage , total: page.total-1});\n          }\n        } finally{\n          return () => setQuery(query);\n        }\n      })()\n      \n    },[query]);\n// PAGINATION\n  //  const prev = () => {\n  //    const prevPage = (page===0)? 1 :parseInt(page) -1;\n  //    setPage(prevPage);\n  //  } \n  //  const next = () => {\n  //   const nextPage = (page===0)? 1 :parseInt(page) +1;\n  //    setPage(nextPage);\n  // } \n  const currentPage = (thisPage) => {\n    setQuery(!query)\n    setPage(page => ({...page, current: thisPage}));\n \n  }\n//-------------------------UPDATE USER------------------------------//\n\n    function putData(data){\n      document.getElementById('email').value = data.email;\n      document.getElementById('submitUser').textContent = 'Save changes';\n      setDataToPut(data);\n      // setQuery(true)\n    }\n\n    async function userSubmit(event) {\n      event.preventDefault();\n      const button = document.getElementById('submitUser');\n      const newEmail = document.getElementById('email').value;\n      const newRol = document.getElementById('roles').value;\n      const newPassword = document.getElementById('password').value;\n      const body = {\n        email : newEmail,\n        password : newPassword,\n        roles : { admin : (newRol === 'admin') }\n      }\n      // console.log(body);\n      console.log(button.textContent === 'Save changes');\n      if(button.textContent === 'Save changes'){\n        //-------------------------UPDATE USER------------------------------//\n        await updateByKeyword(dataToPut.email, body, 'users');\n        setQuery(!query)\n        document.getElementById('email').value= '';\n        document.getElementById('password').value= '';\n        document.getElementById('submitUser').textContent = 'Add User';\n      } else {  \n        //-------------------------POST NEW USER------------------------------//\n        const userAdded =  await postbyKeyword(body,'users');\n        setDisplay(userAdded);\n        setQuery(!query)\n        document.getElementById('email').value= '';\n        document.getElementById('password').value= '';\n        const msg = document.getElementsByTagName('strong');\n        setTimeout(() => { \n          msg.textContent = ''\n          setDisplay({})\n       }, 4000);\n\n      }\n    };\n //-------------------------DELETE USER------------------------------//\n  const deleteBy = async (data) => {\n    await deletebyKeyword(data._id,'users');\n    setQuery(!query);\n  };\n\nconst searchUserBy = async (e) =>{\n  e.preventDefault();\n  const input = document.querySelector('div.search-box input[placeholder=\"Search employee\"]').value;\n  const validateInput = allData.find((user) =>  ( input === user.email  || input === user._id ));\n  if (validateInput) { \n  const data = await getByKeyword(input, 'users');\n  data.roles = (data.roles.admin) ? 'admin' : 'service';\n  const array = [data];\n  setUsers(array);\n  // setQuery(true)\n  }else{\n    setQuery(!query);\n  }\n  };\n        return (\n          <div className=\"users\">\n              <div className=\"containertop\">\n              <img src=\"https://raw.githubusercontent.com/paula113/LIM012-fe-burger-queen-api-client/e60c452ad793ea90d9e698f0fef3d6d190862ce8/src/assests/istockphoto-1049751988-612x612-removebg-preview%201.svg\" alt=\"\" />\n            <form className=\"form\" onSubmit={(e) => userSubmit(e)}>\n            {(display.email) ? <strong>{display.email} successfully added</strong> : null}\n              <input placeholder=\"Email\" id=\"email\" type=\"email\" name=\"email\"  />\n              <input placeholder=\"Password\" id=\"password\" name=\"password\" type=\"password\" minLength={6} />\n              <select name=\"roles\" id=\"roles\">\n                <option value='service'>Service</option>\n                <option value='admin'>Admin</option>\n              </select>\n              <button type=\"submit\" id=\"submitUser\">Add user</button>\n            </form>\n            </div>\n            <SearchBar arrayData={allData} searchUserBy={searchUserBy} table='users'/>\n            <Table table={table} arrayData={users} putData={putData} deleteBy={deleteBy}/>\n            <Pagination page={page }currentPage= {currentPage}/>\n          </div>\n        );\n};\n\nexport default Users;\n","\nimport React, { useState, useEffect } from 'react';\nimport './Products.scss';\nimport Table from '../../Components/Table';\nimport Pagination from '../../Components/Pagination';\nimport SearchBar from '../../Components/searchBar';\nimport { \n  getAllData,\n  getData,\n  getByKeyword,\n  postbyKeyword,\n  deletebyKeyword,\n  updateByKeyword,\n } from '../../controller/crud';\n\nconst Products = () => {\n  //-------------------------STATE------------------------------//\n  const [products, setProducts] = useState([]);\n  const [allData, setAllData] = useState([]);\n  const [page, setPage] = useState({ current: 1 , total: 1});\n  const [dataToPut, setDataToPut] = useState({});\n  const [showDate, setShowDate] = useState(false);\n  const [display, setDisplay] = useState({});\n  const [query, setQuery] = useState(false);\n\n  const table = {head:['image','_id', 'name', 'price','image text','type', 'dateEntry'], type: 'products'};\n//-------------------------GET USER------------------------------//\n    useEffect(() => {\n      (async ()=> {\n        try{\n          console.log('use efect');\n          const dataJson = await getData(page.current,'products');\n           setProducts(dataJson);\n          ////-------\n          \n          const allProducts = await getAllData('products');\n          setAllData(allProducts);\n          setPage(page => ({ ...page, total: Math.ceil((allProducts.length)/5) }));\n          ////-------\n        }catch(e){\n          if(e.message==='No page found'){\n            const prevPage = page.current-1;\n            const dataJson = await getData(prevPage,'products');\n            setProducts(dataJson);\n            setPage({ current: prevPage , total: page.total-1});\n          }\n        } finally{\n          return () => setQuery(query);\n        }\n      })()\n\n    },[query]);\n// PAGINATION\n  const currentPage = (thisPage) => {\n    setQuery(!query)\n    setPage(page => ({...page, current: thisPage}));\n  }\n//-------------------------UPDATE USER------------------------------//\n\n    function putData(data){\n      document.getElementById('name').value = data.name;\n      document.getElementById('price').value = data.price;\n      document.getElementById('type').value = data.type;\n      document.getElementById('submitProduct').textContent = 'Save changes';\n      setShowDate(true);\n      setDataToPut(data);\n    }\n\n    async function productsSubmit(event) {\n      event.preventDefault();\n      const button = document.getElementById('submitProduct');\n      let newName = document.getElementById('name').value;\n      let newPrice = document.getElementById('price').value;\n      let newType = document.getElementById('type').value;\n      let image = document.getElementById('image').value\n      // console.log(document.getElementById('image').value);\n      //const neWmage = document.getElementById('image').files[0];\n      //simage.addEventListener('change', previewImg)\n      const body = {\n        name : newName,\n        price : newPrice,\n        type : newType,\n        image: image,\n      }\n      console.log(body);\n      if(button.textContent === 'Save changes'){\n        //-------------------------UPDATE USER------------------------------//\n        await updateByKeyword(dataToPut._id, body,'products');\n        setQuery(!query)\n        document.getElementById('name').value = '';\n        document.getElementById('price').value = '';\n        document.getElementById('type').value= '';\n        document.getElementById('image').value= '';\n        document.getElementById('submitProduct').textContent = 'Add Product';\n      } else {  \n        //-------------------------POST NEW USER------------------------------//\n        const productAdded = await postbyKeyword(body,'products');\n        setDisplay(productAdded);\n        setQuery(!query)\n        document.getElementById('name').value = '';\n        document.getElementById('price').value = '';\n        document.getElementById('type').value= '';\n        document.getElementById('image').value= '';\n        const msg = document.getElementsByTagName('strong');\n        setTimeout(() => { \n          msg.textContent = ''\n          setDisplay({})\n        }, 4000);\n      }\n    };\n //-------------------------DELETE USER------------------------------//\n  const deleteBy = async (data) => {\n    await deletebyKeyword(data._id,'products')\n    setQuery(!query);\n\n  };\n\nconst searchUserBy = async (e) =>{\n  e.preventDefault();\n  const input = document.querySelector('div.search-box input[placeholder=\"Search employee\"]').value;\n  const validateInput = allData.find((user) => input === user._id );\n  if (validateInput) { \n  const data = await getByKeyword(validateInput._id, 'products');\n  const array = [data];\n  setProducts(array);\n\n  }\n  };\n\n        return (\n          <div className=\"products\">\n              <div className=\"containertop\">\n              <img src=\"https://raw.githubusercontent.com/paula113/LIM012-fe-burger-queen-api-client/e60c452ad793ea90d9e698f0fef3d6d190862ce8/src/assests/istockphoto-1049751988-612x612-removebg-preview%201.svg\" alt=\"\" />\n\n            <form onSubmit={(e) => productsSubmit(e)}>\n\n            {(display.name) ? <strong>{display.name} successfully added</strong> : null}\n              <input placeholder=\"Name\" id=\"name\" name=\"name\"  />\n              <input placeholder=\"Price\" id=\"price\" name=\"price\" />\n              <input placeholder=\"Insert url's image\" id=\"image\" name=\"image\"/>\n              <select name=\"type\" id=\"type\">\n                <option value='desayuno'>Desayunos</option>\n                <option value='hamburguesa'>Hamburguesas</option>\n                <option value='acompañamiento'>Acompañamientos</option>\n                <option value='para tomar'>Para tomar</option>\n              </select>\n              {/* <div class=\"choose_file\">\n                  <span>Choose image</span>\n                  <input id=\"image\" name=\"Select File\" type=\"file\" />\n              </div> */}\n              {showDate ? (<div>\n                <label for=\"sdate\">Selec date entry:</label>\n              <input type=\"datetime-local\" id=\"date\" name=\"date\"\n                    min=\"2000-01-01\" max=\"2021-12-\"></input>\n              </div>) : null}\n               <button type=\"submit\" id=\"submitProduct\">Add Product</button> \n            </form>\n            </div>\n            <SearchBar arrayData={allData} searchUserBy={searchUserBy} table='products'/>\n            <Table table={table} arrayData={products} putData={putData} deleteBy={deleteBy} page={page}/>\n            <Pagination page={page }currentPage= {currentPage}/>\n          </div>\n        );\n};\n\nexport default Products;\n","import React from 'react';\nimport './Product.scss';\n\nconst product = {\n  id: '10',\n  name: 'Name',\n  price: 7.00,\n  image: 'https://assets.biggreenegg.eu/app/uploads/2019/03/28145521/topimage-classic-hamburger-2019m04-800x534-600x401.jpg',\n  type: 'Desayudo',\n  dateEntry: '10/10/19',\n};\n\n// class Product extends Component {\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <div className=\"image-container\">\n//           <img src={product.image} alt=\"\" />\n//         </div>\n//         <h2>{product.name}</h2>\n//         <div className=\"Product-information\">\n//           <div className=\"Product-address\">\n//             <div className=\"Product-address\">\n//               <p>\n//                 Product ID:\n//                 {product._id}\n//               </p>\n//               <p>\n//                 Type:\n//                 {product.type}\n//               </p>\n//               <p>\n//                 Price:\n//                 {product.price}\n//               </p>\n//             </div>\n//           </div>\n//         </div>\n//         <button className=\"AddBtn\" type=\"\" value=\"Add\">Add</button>\n//       </div>\n//     );\n//   }\n// }\nconst Product = () => (\n  <div className=\"container\">\n    <div className=\"image-container\">\n      <img src={product.image} alt=\"\" />\n    </div>\n    <div className=\"Product-information\">\n\n      <div>\n        <p>\n          {product.name}\n        </p>\n        <p>\n          Product ID:\n          {product.id}\n        </p>\n        {/* <p>\n          Type:\n          {product.type}\n        </p> */}\n        <p>\n          Price:\n          {product.price}\n        </p>\n      </div>\n    </div>\n    <button className=\"AddBtn\" type=\"button\" value=\"Add\">Add</button>\n  </div>\n);\n\nexport default Product;\n","import React from 'react';\nimport Product from '../../../Components/Cards/Product';\n\nimport './Products.scss';\n\n// export default class Products extends Component {\n//   render() {\n//     return (\n//       <section className=\"typeofProduct\">\n//         <h1> Type of Product</h1>\n//         <Product />\n//         <Product />\n//         <Product />\n//       </section>\n\n//     );\n//   }\n// }\n\nconst Products = () => (\n  <section className=\"typeofProduct\">\n    <h2> Type of Product</h2>\n    <Product />\n    <Product />\n    <Product />\n  </section>\n\n);\nexport default Products;\n","import React from 'react';\nimport '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport './Order.scss';\n\nconst Order = () => (\n  <div className=\"row\">\n    {/* <Grid item xs={8} className=\"icon\"> */}\n    <DeleteIcon className=\"icon\" />\n    {/* <DeleteForeverIcon /> */}\n    {/* </Grid> */}\n\n    {/* <button>\n      <img src=\"https://raw.githubusercontent.com/paula113/LIM012-fe-social-network/gh-pages/src/img/icons/trash.svg\" />\n    </button> */}\n    <p>\n      Name Product Name Product Name Product\n    </p>\n    <input type=\"number\" id=\"quantity\" name=\"quantity\" min=\"1\" max=\"10\" />\n    <p>$ 14.00</p>\n  </div>\n);\n\nexport default Order;\n","import React from 'react';\nimport './OrderReady.scss';\n\nconst OrderReady = () => (\n  <div className=\"card-order-ready\">\n    <div className=\"row-title\">\n      <span className=\"row-qty\">Qty</span>\n      <span>Products</span>\n      <span>Client Name: ......</span>\n      <span>Order ID</span>\n    </div>\n    <div className=\"row-body\">\n      <span className=\"row-qty\">3</span>\n      <span>coffe coffe coffecofee coffe coffe coffecofee coffe coffe coffecofee</span>\n      <span />\n      <span />\n    </div>\n    <div className=\"card-footer\">\n      <span>Time: 5min</span>\n      <button type=\"button\" className=\"\">Ready</button>\n    </div>\n  </div>\n);\n\nexport default OrderReady;\n","import React from 'react';\nimport Products from './Products/Products';\nimport Order from '../../Components/Cards/Order';\nimport './Orders.scss';\nimport OrderReady from '../../Components/Cards/OrderReady';\n\n// eslint-disable-next-line no-unused-vars\nconst Orders = (props) => (\n  <main className=\"main-section\">\n    <section>\n      <h1>Products</h1>\n      <Products />\n      <Products />\n      <Products />\n    </section>\n\n    <section className=\"Order-taking\">\n      <h2>Take an Order</h2>\n      <div className=\"order-information\">\n        <p>Waitress ID: 1111111</p>\n        <input type=\"text\" name=\"client\" placeholder=\"Client name\" />\n      </div>\n      <div className=\"row-name-columns\">\n        <span> </span>\n        <span>Name</span>\n        <span> Qty</span>\n        <span> Price</span>\n        <span> </span>\n      </div>\n      <Order />\n      <Order />\n      <Order />\n      <Order />\n      <div className=\"Line\" />\n      <p className=\"Total\">Total: $ 30.00</p>\n      <div className=\"Buttons\">\n        <button type=\"button\" className=\"CancelBtn\">Cancel</button>\n        <button type=\"button\" className=\"SendBtn\">Send</button>\n      </div>\n      <OrderReady />\n    </section>\n  </main>\n);\n\nexport default Orders;\n","import React from 'react';\nimport {\n  Link, Switch, Route, withRouter,\n} from 'react-router-dom';\nimport '@material-ui/core/Grid';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport './Components.scss';\nimport Users from '../Views/Users/Users';\nimport Products from '../Views/Products/Products';\nimport Orders from '../Views/Orders/Orders';\n\nconst NavBar = (prop) => {\n  const { path, url, history } = prop;\n  return (\n    <div className=\"navBarComponent\">\n      <nav>\n        <img alt=\"\" src=\"https://raw.githubusercontent.com/paula113/LIM012-fe-burger-queen-api-client/bd2da1a0fc4e35daafdb4d20d19a2c03b9610ebe/src/assests/Vectorburger.svg\" />\n        <ul>\n          <li><Link to={`${url}/users`}>Users</Link></li>\n          <li><Link to={`${url}/products`}>Products</Link></li>\n          <li><Link to={`${url}/orders`}>Orders</Link></li>\n        </ul>\n        <ExitToAppIcon className=\"icon\" onClick={() => {\n          localStorage.removeItem('token');\n          history.push('/');\n        }}   />\n      </nav>\n\n      <Switch>\n        <Route exact path={path}>\n          <Users />\n        </Route>\n        <Route exact path={`${path}/users`}>\n          <Users />\n        </Route>\n        <Route exact path={`${path}/products`}>\n          <Products />\n        </Route>\n        <Route exact path={`${path}/orders`}>\n          <Orders />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\nexport default withRouter(NavBar);\n","import React from 'react';\nimport {\n  useRouteMatch,\n} from 'react-router-dom';\nimport NavBar from '../../Components/NavBar';\n\nexport default function Home() {\n  const { path, url } = useRouteMatch();\n  return (\n    <div>\n      <NavBar url={url} path={path}> </NavBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router, Route, Switch, Redirect,\n} from 'react-router-dom';\n\nimport Login from './Views/Login/Login';\nimport Home from './Views/Home/Home';\nimport Orders from './Views/Orders/Orders';\n\nconst App = () => {\n  const token = localStorage.getItem('token');\n  const isLogin = !!token;\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n        <Route path=\"/orders\">\n          <Orders />\n        </Route>\n      </Switch>\n      { isLogin && <Redirect to=\"/home\" />}\n    </Router>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}